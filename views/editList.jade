extends layout

block scripts

 script

    var init_items = !{JSON.stringify(list_items)};
    var item_types = !{JSON.stringify(list_item_types)};

    var html_select_options = "";

    $.each(item_types, function(j, item_type){
      html_select_options += "<option value='" + item_type.id + "'>"+item_type.name+"</option>"      
    });

    var socket = io.connect();
    socket.on('list_update', function (data) {
      if( data.list_id == #{list_id} ){
        reloadItems(data.list_items);
      }      
    });

    socket.on('listname_update', function(data) {
      if( data.list_id == #{list_id} ){
        if( $("h3#listname").text() != data.list_name ){
          $("h3#listname").text(data.list_name);
        }
      }
    });

    socket.on('itemname_update', function(data) {
      if( data.list_id == #{list_id} ){
        var tmp_item = $("ul#list li#" + data.item_id + " span");
        if( tmp_item.text() != data.item_name ){
          tmp_item.text(data.item_name);
        }
      }
    });

    socket.on('itemdone_update', function(data) {
      if( data.list_id == #{list_id} ){
        if( data.item_done ){
          $("ul#list li#" + data.item_id).attr("class", "not_done");
        }
        else{
          $("ul#list li#" + data.item_id).attr("class", "done");
        }
      }
    });

    socket.on('itemtype_update', function(data) {
      if( data.list_id == #{list_id} ){
        $("ul#list li#" + data.item_id + " select").val(data.item_type_id);
      }
    });

    function creteNewItem(){
      var itemname = $("input#itemname").val();
      var selectedtype = $("select#new_item_type").val();
      if( itemname === undefined || itemname == "" ){
        alert('give item a name');
      }
      else{
        socket.emit("item", { type: "new_item", user_id: "#{user_id}", list_id: #{list_id}, item_name: itemname, item_type_id: selectedtype});
        $("input#itemname").val('');
      }
    }

    function markItem (listID, itemID)
     {
        socket.emit("item", { type: "mark_item", user_id: "#{user_id}", list_id: listID, item_id: itemID});
     }

    function changeItemType(listID, itemID, typeID){
      socket.emit("item", { type: "edit_item_type", user_id: "#{user_id}", list_id: listID, item_id: itemID, item_type_id: typeID});
    }

    function reloadItems(rows){
      // Remove old data
      var ul = $("ul");
      ul.empty();
   
      // Go through each row
      $.each(rows, function(i, row){
        
        // Create the row with name
        ul.append("<li id='"+row.id+"'><span>" + row.name + "</span></li>");
        // Make text editable
        $("li#"+row.id).attr('contenteditable', 'true');
        // Is the row marked as done
        if( row.done ){
          $("li#"+row.id).addClass("done");
        }  
 
        // Set select
        $("li#"+row.id).prepend("<select id=item_type_" + row.id + "></select>");
        // And all select options
        $("select#item_type_"+row.id).append( html_select_options );
        // Set value
        $("select#item_type_"+row.id).val(row.list_item_type_id);
        
        $("select#item_type_"+row.id).attr('onchange','changeItemType("#{list_id}",'+row.id+',this.value)');
        
             
      });

      sort();

      $("input#itemname").keypress(function(e){
        if( e.which == 13 ){
          creteNewItem();
        }
      });

      $("ul#list li").keypress(function(e){return e.which != 13; });
      $("ul#list li").bind('input', function(e){
        socket.emit("item", {type: 'edit_name', user_id: #{user_id}, list_id: #{list_id}, item_id: e.currentTarget.id, item_name: this.innerText});
      });
    }
    function sort(){
        var items = $('li');
        items.sort(function(a,b){
          return a.id-b.id
        });
        $("ul#list").append(items);
    }

    
    $(document).ready(function(){
      reloadItems(init_items);
      
    });



block content
  block scripts
  div
    button(onclick='location.href="/list/#{list_id}"')#list_edit To Mark mode
    h3(contenteditable=true, id='listname') #{list_name} - Edit mode
    ul#list.edit_list
     

                  
 

    
  div#createItem
    
    b Create new item:
    select(id="new_item_type")
      each itemtype in list_item_types
        option(value=itemtype.id) #{itemtype.name}

    input(id='itemname',type='text',name='itemname')
    input(type='submit',value='Create', OnClick='creteNewItem()')


